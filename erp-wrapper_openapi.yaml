openapi: 3.0.2
info:
  title: ERP Wrapper
  description: API Wrapper which is made for better communication with the *ERP service* and creating **Full REST** communication.
  version: 0.3.0
paths:
  /-/liveness:
    get:
      tags:
        - operations
      summary: Check API liveness
      description: Check liveness of ERP Wrapper
      operationId: ping___liveness_get
      responses:
        '200':
          description: '`Success`'
          content:
            text/plain:
              schema:
                type: string
              example: pong
              type: string
        '404':
          description: '`Failed` ERP Wrapper is not responding'
  /-/ping:
    get:
      tags:
        - operations
      summary: Check API liveness
      description: Check liveness of ERP Wrapper
      operationId: ping___ping_get
      responses:
        '200':
          description: '`Success`'
          content:
            text/plain:
              schema:
                type: string
              example: pong
              type: string
        '404':
          description: '`Failed` ERP Wrapper is not responding'
  /-/readiness:
    get:
      tags:
        - operations
      summary: Check API readiness
      description: Check readiness of ERP
      operationId: readiness___readiness_get
      responses:
        '200':
          description: '`Success`'
          content:
            text/plain:
              schema:
                type: string
              example: pong
              type: string
        '404':
          description: '`Failed` ERP is not responding'
        '417':
          description: '`ERP Unavailable`'
  /v1/customers/{customer_id}:
    get:
      tags:
        - v1 customers
      summary: Get customer
      description: Get customer by customer ID
      operationId: get_customer_v1_customers__customer_id__get
      parameters:
        - required: true
          schema:
            title: Customer Id
            type: string
            format: uuid
          name: customer_id
          in: path
        - description: Legal Entity
          required: true
          schema:
            allOf:
              - $ref: '#/components/schemas/LegalEntity'
            description: Legal Entity
          example: HEG
          name: legal_entity
          in: query
        - description: Token defined for specific instance of ERP Wrapper
          required: true
          schema:
            title: Token
            type: string
            description: Token defined for specific instance of ERP Wrapper
            format: uuid
          name: token
          in: header
        - description: Name of service which wants to call specific endpoint
          required: true
          schema:
            title: Heu-Requesting-Service
            type: string
            description: Name of service which wants to call specific endpoint
          name: HEU-Requesting-Service
          in: header
      responses:
        '200':
          description: '`Success`'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerV1'
        '401':
          description: '`Unauthorized` The token or service name is incorrect'
        '404':
          description: '`Failed` Customer not exists'
        '410':
          description: '`ERP Unable to Finish`'
        '412':
          description: '`ERP Validation Error`'
        '417':
          description: '`ERP Unavailable`'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
  /v1/customers:
    get:
      tags:
        - v1 customers
      summary: Get customers
      description: Get customers by identification number or array of customer IDs
      operationId: get_customers_v1_customers_get
      parameters:
        - description: Get all customers with the same **identification number**
          required: false
          schema:
            title: Identification Number
            type: string
            description: Get all customers with the same **identification number**
          example: 12345678
          name: identification_number
          in: query
        - description: Customer IDs array (UUID)
          required: false
          schema:
            title: Customer Ids
            type: array
            items:
              type: string
              format: uuid
            description: Customer IDs array (UUID)
          name: customer_ids
          in: query
        - description: Legal Entity
          required: true
          schema:
            allOf:
              - $ref: '#/components/schemas/LegalEntity'
            description: Legal Entity
          example: HEG
          name: legal_entity
          in: query
        - description: Token defined for specific instance of ERP Wrapper
          required: true
          schema:
            title: Token
            type: string
            description: Token defined for specific instance of ERP Wrapper
            format: uuid
          name: token
          in: header
        - description: Name of service which wants to call specific endpoint
          required: true
          schema:
            title: Heu-Requesting-Service
            type: string
            description: Name of service which wants to call specific endpoint
          name: HEU-Requesting-Service
          in: header
      responses:
        '200':
          description: '`Success`'
          content:
            application/json:
              schema:
                title: Response Get Customers V1 Customers Get
                type: array
                items:
                  $ref: '#/components/schemas/CustomerV1'
        '401':
          description: '`Unauthorized` The token or service name is incorrect'
        '404':
          description: '`Failed` Customers not exist'
        '410':
          description: '`ERP Unable to Finish`'
        '412':
          description: '`ERP Validation Error`'
        '417':
          description: '`ERP Unavailable`'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
    post:
      tags:
        - v1 customers
      summary: Create customer
      description: Create customer
      operationId: create_customer_v1_customers_post
      parameters:
        - description: Token defined for specific instance of ERP Wrapper
          required: true
          schema:
            title: Token
            type: string
            description: Token defined for specific instance of ERP Wrapper
            format: uuid
          name: token
          in: header
        - description: Name of service which wants to call specific endpoint
          required: true
          schema:
            title: Heu-Requesting-Service
            type: string
            description: Name of service which wants to call specific endpoint
          name: HEU-Requesting-Service
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerInputV1'
        required: true
      responses:
        '201':
          description: '`Success`'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerV1'
        '401':
          description: '`Unauthorized` The token or service name is incorrect'
        '404':
          description: '`Failed` Cannot create customer'
        '409':
          description: '`Conflict` Customer already exists'
        '410':
          description: '`ERP Unable to Finish`'
        '412':
          description: '`ERP Validation Error`'
        '417':
          description: '`ERP Unavailable`'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
  /v1/invoices/{paymentReferenceId}:
    get:
      tags:
        - v1 invoices
      summary: Get invoice
      description: Get invoice by variable symbol (*paymentReferenceId*)
      operationId: get_invoice_v1_invoices__paymentReferenceId__get
      parameters:
        - description: Variable symbol
          required: true
          schema:
            title: Paymentreferenceid
            type: integer
            description: Variable symbol
          example: 1100000005
          name: paymentReferenceId
          in: path
        - description: Type of invoice (invoice or proforma) [Optional - invoice is default]
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/DocumentType'
            description: Type of invoice (invoice or proforma) [Optional - invoice is default]
            default: invoice
          name: invoice_type
          in: query
        - description: Include parameter
          required: false
          schema:
            title: Include Pdf
            type: boolean
            description: Include parameter
            default: false
          name: include_pdf
          in: query
        - description: Legal Entity
          required: true
          schema:
            allOf:
              - $ref: '#/components/schemas/LegalEntity'
            description: Legal Entity
          example: HEG
          name: legal_entity
          in: query
        - description: Token defined for specific instance of ERP Wrapper
          required: true
          schema:
            title: Token
            type: string
            description: Token defined for specific instance of ERP Wrapper
            format: uuid
          name: token
          in: header
        - description: Name of service which wants to call specific endpoint
          required: true
          schema:
            title: Heu-Requesting-Service
            type: string
            description: Name of service which wants to call specific endpoint
          name: HEU-Requesting-Service
          in: header
      responses:
        '200':
          description: '`Success`'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceV1'
        '401':
          description: '`Unauthorized` The token or service name is incorrect'
        '404':
          description: '`Failed` Invoice not found'
        '410':
          description: '`ERP Unable to Finish`'
        '412':
          description: '`ERP Validation Error`'
        '417':
          description: '`ERP Unavailable`'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
    delete:
      tags:
        - v1 invoices
      summary: Cancel proforma invoice
      description: Cancel proforma invoice by variable symbol (*paymentReferenceId*)
      operationId: cancel_proforma_invoice_v1_invoices__paymentReferenceId__delete
      parameters:
        - description: Variable symbol
          required: true
          schema:
            title: Paymentreferenceid
            type: integer
            description: Variable symbol
          example: 1100000005
          name: paymentReferenceId
          in: path
        - description: Legal Entity
          required: true
          schema:
            allOf:
              - $ref: '#/components/schemas/LegalEntity'
            description: Legal Entity
          example: HEG
          name: legal_entity
          in: query
        - description: Token defined for specific instance of ERP Wrapper
          required: true
          schema:
            title: Token
            type: string
            description: Token defined for specific instance of ERP Wrapper
            format: uuid
          name: token
          in: header
        - description: Name of service which wants to call specific endpoint
          required: true
          schema:
            title: Heu-Requesting-Service
            type: string
            description: Name of service which wants to call specific endpoint
          name: HEU-Requesting-Service
          in: header
      responses:
        '204':
          description: '`Success` Proforma invoice canceled'
        '401':
          description: '`Unauthorized` The token or service name is incorrect'
        '404':
          description: '`Failed` Inovice not found'
        '410':
          description: '`ERP Unable to Finish`'
        '412':
          description: '`ERP Validation Error`'
        '417':
          description: '`ERP Unavailable`'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
    head:
      tags:
        - v1 invoices
      summary: Check PDF existence
      description: Check PDF existence by *paymentReferenceId* and *invoice type*
      operationId: check_invoice_v1_invoices__paymentReferenceId__head
      parameters:
        - description: Variable symbol
          required: true
          schema:
            title: Paymentreferenceid
            type: integer
            description: Variable symbol
          example: 1100000005
          name: paymentReferenceId
          in: path
        - description: Type of invoice (invoice or proforma) [Optional - invoice is default]
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/DocumentType'
            description: Type of invoice (invoice or proforma) [Optional - invoice is default]
            default: invoice
          name: invoice_type
          in: query
        - description: Legal Entity
          required: true
          schema:
            allOf:
              - $ref: '#/components/schemas/LegalEntity'
            description: Legal Entity
          example: HEG
          name: legal_entity
          in: query
        - description: Token defined for specific instance of ERP Wrapper
          required: true
          schema:
            title: Token
            type: string
            description: Token defined for specific instance of ERP Wrapper
            format: uuid
          name: token
          in: header
        - description: Name of service which wants to call specific endpoint
          required: true
          schema:
            title: Heu-Requesting-Service
            type: string
            description: Name of service which wants to call specific endpoint
          name: HEU-Requesting-Service
          in: header
      responses:
        '200':
          description: '`Success` PDF exists'
        '401':
          description: '`Unauthorized` The token or service name is incorrect'
        '404':
          description: '`Failed` PDF does not exist'
        '410':
          description: '`ERP Unable to Finish`'
        '412':
          description: '`ERP Validation Error`'
        '417':
          description: '`ERP Unavailable`'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
  /v1/invoices:
    get:
      tags:
        - v1 invoices
      summary: Get invoices for customer
      description: Get invoices by their customer ID
      operationId: get_invoices_v1_invoices_get
      parameters:
        - description: Customer ID (UUID)
          required: true
          schema:
            title: Customer Id
            type: string
            description: Customer ID (UUID)
            format: uuid
          example: 273c0dce-37dd-4d77-9e53-af7150088881
          name: customer_id
          in: query
        - description: Type of invoice (invoice or proforma) [Optional - invoice is default]
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/DocumentType'
            description: Type of invoice (invoice or proforma) [Optional - invoice is default]
            default: invoice
          name: invoice_type
          in: query
        - description: Legal Entity
          required: true
          schema:
            allOf:
              - $ref: '#/components/schemas/LegalEntity'
            description: Legal Entity
          example: HEG
          name: legal_entity
          in: query
        - description: Token defined for specific instance of ERP Wrapper
          required: true
          schema:
            title: Token
            type: string
            description: Token defined for specific instance of ERP Wrapper
            format: uuid
          name: token
          in: header
        - description: Name of service which wants to call specific endpoint
          required: true
          schema:
            title: Heu-Requesting-Service
            type: string
            description: Name of service which wants to call specific endpoint
          name: HEU-Requesting-Service
          in: header
      responses:
        '200':
          description: '`Success`'
          content:
            application/json:
              schema:
                title: Response Get Invoices V1 Invoices Get
                type: array
                items:
                  $ref: '#/components/schemas/InvoiceV1'
        '401':
          description: '`Unauthorized` The token or service name is incorrect'
        '404':
          description: '`Failed` Invoices not found'
        '410':
          description: '`ERP Unable to Finish`'
        '412':
          description: '`ERP Validation Error`'
        '417':
          description: '`ERP Unavailable`'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
    post:
      tags:
        - v1 invoices
      summary: Create invoice
      description: Create invoice or proforma invoice
      operationId: create_invoice_v1_invoices_post
      parameters:
        - description: Token defined for specific instance of ERP Wrapper
          required: true
          schema:
            title: Token
            type: string
            description: Token defined for specific instance of ERP Wrapper
            format: uuid
          name: token
          in: header
        - description: Name of service which wants to call specific endpoint
          required: true
          schema:
            title: Heu-Requesting-Service
            type: string
            description: Name of service which wants to call specific endpoint
          name: HEU-Requesting-Service
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceInputV1'
        required: true
      responses:
        '201':
          description: '`Success` Invoice created'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceV1'
        '204':
          description: '`No Content` Invoice created but it is not issued'
        '401':
          description: '`Unauthorized` The token or service name is incorrect'
        '404':
          description: '`Failed` Cannot create invoice'
        '409':
          description: '`Conflict` Invoice already exists'
        '410':
          description: '`ERP Unable to Finish`'
        '412':
          description: '`ERP Validation Error`'
        '417':
          description: '`ERP Unavailable`'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
  /v2/customers/{customer_id}:
    get:
      tags:
        - v2 customers
      summary: Get customer
      description: Get customer by customer ID
      operationId: get_customer_v2_customers__customer_id__get
      parameters:
        - required: true
          schema:
            title: Customer Id
            type: string
            format: uuid
          name: customer_id
          in: path
        - description: Legal Entity
          required: true
          schema:
            allOf:
              - $ref: '#/components/schemas/LegalEntity'
            description: Legal Entity
          example: HEG
          name: legal_entity
          in: query
        - description: Token defined for specific instance of ERP Wrapper
          required: true
          schema:
            title: Token
            type: string
            description: Token defined for specific instance of ERP Wrapper
            format: uuid
          name: token
          in: header
        - description: Name of service which wants to call specific endpoint
          required: true
          schema:
            title: Heu-Requesting-Service
            type: string
            description: Name of service which wants to call specific endpoint
          name: HEU-Requesting-Service
          in: header
      responses:
        '200':
          description: '`Success`'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerV2'
        '401':
          description: '`Unauthorized` The token or service name is incorrect'
        '404':
          description: '`Failed` Customer not exists'
        '410':
          description: '`ERP Unable to Finish`'
        '412':
          description: '`ERP Validation Error`'
        '417':
          description: '`ERP Unavailable`'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
  /v2/customers:
    get:
      tags:
        - v2 customers
      summary: Get customers
      description: Get customers by identification number or array of customer IDs
      operationId: get_customers_v2_customers_get
      parameters:
        - description: Get all customers with the same **identification number**
          required: false
          schema:
            title: Identification Number
            type: string
            description: Get all customers with the same **identification number**
          example: '12345678'
          name: identification_number
          in: query
        - description: Customer IDs array (UUID)
          required: false
          schema:
            title: Customer Ids
            type: array
            items:
              type: string
              format: uuid
            description: Customer IDs array (UUID)
          name: customer_ids
          in: query
        - description: Legal Entity
          required: true
          schema:
            allOf:
              - $ref: '#/components/schemas/LegalEntity'
            description: Legal Entity
          example: HEG
          name: legal_entity
          in: query
        - description: Token defined for specific instance of ERP Wrapper
          required: true
          schema:
            title: Token
            type: string
            description: Token defined for specific instance of ERP Wrapper
            format: uuid
          name: token
          in: header
        - description: Name of service which wants to call specific endpoint
          required: true
          schema:
            title: Heu-Requesting-Service
            type: string
            description: Name of service which wants to call specific endpoint
          name: HEU-Requesting-Service
          in: header
      responses:
        '200':
          description: '`Success`'
          content:
            application/json:
              schema:
                title: Response Get Customers V2 Customers Get
                type: array
                items:
                  $ref: '#/components/schemas/CustomerV2'
        '401':
          description: '`Unauthorized` The token or service name is incorrect'
        '404':
          description: '`Failed` Customers not exist'
        '410':
          description: '`ERP Unable to Finish`'
        '412':
          description: '`ERP Validation Error`'
        '417':
          description: '`ERP Unavailable`'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
    post:
      tags:
        - v2 customers
      summary: Create customer
      description: Create customer
      operationId: create_customer_v2_customers_post
      parameters:
        - description: Token defined for specific instance of ERP Wrapper
          required: true
          schema:
            title: Token
            type: string
            description: Token defined for specific instance of ERP Wrapper
            format: uuid
          name: token
          in: header
        - description: Name of service which wants to call specific endpoint
          required: true
          schema:
            title: Heu-Requesting-Service
            type: string
            description: Name of service which wants to call specific endpoint
          name: HEU-Requesting-Service
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerInputV2'
        required: true
      responses:
        '201':
          description: '`Success`'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerV2'
        '401':
          description: '`Unauthorized` The token or service name is incorrect'
        '404':
          description: '`Failed` Cannot create customer'
        '409':
          description: '`Conflict` Customer already exists'
        '410':
          description: '`ERP Unable to Finish`'
        '412':
          description: '`ERP Validation Error`'
        '417':
          description: '`ERP Unavailable`'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
  /v2/invoices/{paymentReferenceId}:
    get:
      tags:
        - v2 invoices
      summary: Get invoice
      description: Get invoice by variable symbol (*paymentReferenceId*)
      operationId: get_invoice_v2_invoices__paymentReferenceId__get
      parameters:
        - description: Variable symbol
          required: true
          schema:
            title: Paymentreferenceid
            anyOf:
              - type: integer
              - type: string
            description: Variable symbol
          example: 1100000005
          name: paymentReferenceId
          in: path
        - description: Type of invoice (invoice or proforma) [Optional - invoice is default]
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/DocumentType'
            description: Type of invoice (invoice or proforma) [Optional - invoice is default]
            default: invoice
          name: invoice_type
          in: query
        - description: Include parameter
          required: false
          schema:
            title: Include Pdf
            type: boolean
            description: Include parameter
            default: false
          name: include_pdf
          in: query
        - description: Legal Entity
          required: true
          schema:
            allOf:
              - $ref: '#/components/schemas/LegalEntity'
            description: Legal Entity
          example: HEG
          name: legal_entity
          in: query
        - description: Token defined for specific instance of ERP Wrapper
          required: true
          schema:
            title: Token
            type: string
            description: Token defined for specific instance of ERP Wrapper
            format: uuid
          name: token
          in: header
        - description: Name of service which wants to call specific endpoint
          required: true
          schema:
            title: Heu-Requesting-Service
            type: string
            description: Name of service which wants to call specific endpoint
          name: HEU-Requesting-Service
          in: header
      responses:
        '200':
          description: '`Success`'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceV2'
        '401':
          description: '`Unauthorized` The token or service name is incorrect'
        '404':
          description: '`Failed` Invoice not found'
        '410':
          description: '`ERP Unable to Finish`'
        '412':
          description: '`ERP Validation Error`'
        '417':
          description: '`ERP Unavailable`'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
    delete:
      tags:
        - v2 invoices
      summary: Cancel proforma invoice
      description: Cancel proforma invoice by variable symbol (*paymentReferenceId*)
      operationId: cancel_proforma_invoice_v2_invoices__paymentReferenceId__delete
      parameters:
        - description: Variable symbol
          required: true
          schema:
            title: Paymentreferenceid
            anyOf:
              - type: integer
              - type: string
            description: Variable symbol
          example: 1100000005
          name: paymentReferenceId
          in: path
        - description: Legal Entity
          required: true
          schema:
            allOf:
              - $ref: '#/components/schemas/LegalEntity'
            description: Legal Entity
          example: HEG
          name: legal_entity
          in: query
        - description: Token defined for specific instance of ERP Wrapper
          required: true
          schema:
            title: Token
            type: string
            description: Token defined for specific instance of ERP Wrapper
            format: uuid
          name: token
          in: header
        - description: Name of service which wants to call specific endpoint
          required: true
          schema:
            title: Heu-Requesting-Service
            type: string
            description: Name of service which wants to call specific endpoint
          name: HEU-Requesting-Service
          in: header
      responses:
        '204':
          description: '`Success` Proforma invoice canceled'
        '401':
          description: '`Unauthorized` The token or service name is incorrect'
        '404':
          description: '`Failed` Inovice not found'
        '410':
          description: '`ERP Unable to Finish`'
        '412':
          description: '`ERP Validation Error`'
        '417':
          description: '`ERP Unavailable`'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
    head:
      tags:
        - v2 invoices
      summary: Check PDF existence
      description: Check PDF existence by *paymentReferenceId* and *invoice type*
      operationId: check_invoice_v2_invoices__paymentReferenceId__head
      parameters:
        - description: Variable symbol
          required: true
          schema:
            title: Paymentreferenceid
            anyOf:
              - type: integer
              - type: string
            description: Variable symbol
          example: 1100000005
          name: paymentReferenceId
          in: path
        - description: Type of invoice (invoice or proforma) [Optional - invoice is default]
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/DocumentType'
            description: Type of invoice (invoice or proforma) [Optional - invoice is default]
            default: invoice
          name: invoice_type
          in: query
        - description: Legal Entity
          required: true
          schema:
            allOf:
              - $ref: '#/components/schemas/LegalEntity'
            description: Legal Entity
          example: HEG
          name: legal_entity
          in: query
        - description: Token defined for specific instance of ERP Wrapper
          required: true
          schema:
            title: Token
            type: string
            description: Token defined for specific instance of ERP Wrapper
            format: uuid
          name: token
          in: header
        - description: Name of service which wants to call specific endpoint
          required: true
          schema:
            title: Heu-Requesting-Service
            type: string
            description: Name of service which wants to call specific endpoint
          name: HEU-Requesting-Service
          in: header
      responses:
        '200':
          description: '`Success` PDF exists'
        '401':
          description: '`Unauthorized` The token or service name is incorrect'
        '404':
          description: '`Failed` PDF does not exist'
        '410':
          description: '`ERP Unable to Finish`'
        '412':
          description: '`ERP Validation Error`'
        '417':
          description: '`ERP Unavailable`'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
  /v2/invoices:
    get:
      tags:
        - v2 invoices
      summary: Get invoices for customer
      description: Get invoices by their customer ID
      operationId: get_invoices_v2_invoices_get
      parameters:
        - description: Customer ID (UUID)
          required: true
          schema:
            title: Customer Id
            type: string
            description: Customer ID (UUID)
            format: uuid
          example: 273c0dce-37dd-4d77-9e53-af7150088881
          name: customer_id
          in: query
        - description: Type of invoice (invoice or proforma) [Optional - invoice is default]
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/DocumentType'
            description: Type of invoice (invoice or proforma) [Optional - invoice is default]
            default: invoice
          name: invoice_type
          in: query
        - description: Legal Entity
          required: true
          schema:
            allOf:
              - $ref: '#/components/schemas/LegalEntity'
            description: Legal Entity
          example: HEG
          name: legal_entity
          in: query
        - description: Token defined for specific instance of ERP Wrapper
          required: true
          schema:
            title: Token
            type: string
            description: Token defined for specific instance of ERP Wrapper
            format: uuid
          name: token
          in: header
        - description: Name of service which wants to call specific endpoint
          required: true
          schema:
            title: Heu-Requesting-Service
            type: string
            description: Name of service which wants to call specific endpoint
          name: HEU-Requesting-Service
          in: header
      responses:
        '200':
          description: '`Success`'
          content:
            application/json:
              schema:
                title: Response Get Invoices V2 Invoices Get
                type: array
                items:
                  $ref: '#/components/schemas/InvoiceV2'
        '401':
          description: '`Unauthorized` The token or service name is incorrect'
        '404':
          description: '`Failed` Invoices not found'
        '410':
          description: '`ERP Unable to Finish`'
        '412':
          description: '`ERP Validation Error`'
        '417':
          description: '`ERP Unavailable`'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
    post:
      tags:
        - v2 invoices
      summary: Create invoice
      description: Create invoice or proforma invoice
      operationId: create_invoice_v2_invoices_post
      parameters:
        - description: Token defined for specific instance of ERP Wrapper
          required: true
          schema:
            title: Token
            type: string
            description: Token defined for specific instance of ERP Wrapper
            format: uuid
          name: token
          in: header
        - description: Name of service which wants to call specific endpoint
          required: true
          schema:
            title: Heu-Requesting-Service
            type: string
            description: Name of service which wants to call specific endpoint
          name: HEU-Requesting-Service
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceInputV2'
        required: true
      responses:
        '201':
          description: '`Success` Invoice created'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceV2'
        '204':
          description: '`No Content` Invoice created but it is not issued'
        '401':
          description: '`Unauthorized` The token or service name is incorrect'
        '404':
          description: '`Failed` Cannot create invoice'
        '409':
          description: '`Conflict` Invoice already exists'
        '410':
          description: '`ERP Unable to Finish`'
        '412':
          description: '`ERP Validation Error`'
        '417':
          description: '`ERP Unavailable`'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
  /v2/partners/{identification_number}:
    get:
      tags:
        - v2 partners
      summary: Get partners
      description: Get partners by identification number from Global Adress Book
      operationId: get_partners_v2_partners__identification_number__get
      parameters:
        - description: Identification number of partner
          required: true
          schema:
            title: Identification Number
            type: string
            description: Identification number of partner
          example: '12345678'
          name: identification_number
          in: path
        - description: Token defined for specific instance of ERP Wrapper
          required: true
          schema:
            title: Token
            type: string
            description: Token defined for specific instance of ERP Wrapper
            format: uuid
          name: token
          in: header
        - description: Name of service which wants to call specific endpoint
          required: true
          schema:
            title: Heu-Requesting-Service
            type: string
            description: Name of service which wants to call specific endpoint
          name: HEU-Requesting-Service
          in: header
      responses:
        '200':
          description: '`Success`'
          content:
            application/json:
              schema:
                title: Response Get Partners V2 Partners  Identification Number  Get
                type: array
                items:
                  $ref: '#/components/schemas/PartnerV2'
        '401':
          description: '`Unauthorized` The token or service name is incorrect'
        '404':
          description: '`Failed` Partners not exist'
        '410':
          description: '`ERP Unable to Finish`'
        '412':
          description: '`ERP Validation Error`'
        '417':
          description: '`ERP Unavailable`'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
  /v3/customers/{customer_id}:
    get:
      tags:
        - v3 customers
      summary: Get customer
      description: Get customer by customer ID
      operationId: get_customer_v3_customers__customer_id__get
      parameters:
        - required: true
          schema:
            title: Customer Id
            type: string
            format: uuid
          name: customer_id
          in: path
        - description: Legal Entity
          required: true
          schema:
            allOf:
              - $ref: '#/components/schemas/LegalEntity'
            description: Legal Entity
          example: HEG
          name: legal_entity
          in: query
        - description: Service token (for integration of new services, send request to **#one-b2b-payment-requests**)
          required: true
          schema:
            title: Token
            type: string
            description: Service token (for integration of new services, send request to **#one-b2b-payment-requests**)
            format: uuid
          name: token
          in: header
      responses:
        '200':
          description: '`Success`'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerV3'
        '401':
          description: '`Unauthorized` The token or service name is incorrect'
        '404':
          description: '`Failed` Customer not exists'
        '410':
          description: '`ERP Unable to Finish`'
        '412':
          description: '`ERP Validation Error`'
        '417':
          description: '`ERP Unavailable`'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v3/customers:
    get:
      tags:
        - v3 customers
      summary: Get customers
      description: Get customers by identification number or array of customer IDs
      operationId: get_customers_v3_customers_get
      parameters:
        - description: Get all customers with the same **identification number**
          required: false
          schema:
            title: Identification Number
            type: string
            description: Get all customers with the same **identification number**
          example: '12345678'
          name: identification_number
          in: query
        - description: Customer IDs array (UUID)
          required: false
          schema:
            title: Customer Ids
            type: array
            items:
              type: string
              format: uuid
            description: Customer IDs array (UUID)
          name: customer_ids
          in: query
        - description: Legal Entity
          required: true
          schema:
            allOf:
              - $ref: '#/components/schemas/LegalEntity'
            description: Legal Entity
          example: HEG
          name: legal_entity
          in: query
        - description: Service token (for integration of new services, send request to **#one-b2b-payment-requests**)
          required: true
          schema:
            title: Token
            type: string
            description: Service token (for integration of new services, send request to **#one-b2b-payment-requests**)
            format: uuid
          name: token
          in: header
      responses:
        '200':
          description: '`Success`'
          content:
            application/json:
              schema:
                title: Response Get Customers V3 Customers Get
                type: array
                items:
                  $ref: '#/components/schemas/CustomerV3'
        '401':
          description: '`Unauthorized` The token or service name is incorrect'
        '404':
          description: '`Failed` Customers not exist'
        '410':
          description: '`ERP Unable to Finish`'
        '412':
          description: '`ERP Validation Error`'
        '417':
          description: '`ERP Unavailable`'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - v3 customers
      summary: Create customer
      description: Create customer
      operationId: create_customer_v3_customers_post
      parameters:
        - description: Service token (for integration of new services, send request to **#one-b2b-payment-requests**)
          required: true
          schema:
            title: Token
            type: string
            description: Service token (for integration of new services, send request to **#one-b2b-payment-requests**)
            format: uuid
          name: token
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerInputV3'
        required: true
      responses:
        '201':
          description: '`Success`'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerV3'
        '401':
          description: '`Unauthorized` The token or service name is incorrect'
        '404':
          description: '`Failed` Cannot create customer'
        '409':
          description: '`Conflict` Customer already exists'
        '410':
          description: '`ERP Unable to Finish`'
        '412':
          description: '`ERP Validation Error`'
        '417':
          description: '`ERP Unavailable`'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v3/invoices/{paymentReferenceId}:
    get:
      tags:
        - v3 invoices
      summary: Get invoice
      description: Get invoice by variable symbol (*paymentReferenceId*)
      operationId: get_invoice_v3_invoices__paymentReferenceId__get
      parameters:
        - description: Variable symbol
          required: true
          schema:
            title: Paymentreferenceid
            type: string
            description: Variable symbol
          example: '1100000005'
          name: paymentReferenceId
          in: path
        - description: Type of invoice (invoice or proforma) [Optional - invoice is default]
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/DocumentType'
            description: Type of invoice (invoice or proforma) [Optional - invoice is default]
            default: invoice
          name: invoice_type
          in: query
        - description: Include parameter
          required: false
          schema:
            title: Include Pdf
            type: boolean
            description: Include parameter
            default: false
          name: include_pdf
          in: query
        - description: Legal Entity
          required: true
          schema:
            allOf:
              - $ref: '#/components/schemas/LegalEntity'
            description: Legal Entity
          example: HEG
          name: legal_entity
          in: query
        - description: Service token (for integration of new services, send request to **#one-b2b-payment-requests**)
          required: true
          schema:
            title: Token
            type: string
            description: Service token (for integration of new services, send request to **#one-b2b-payment-requests**)
            format: uuid
          name: token
          in: header
      responses:
        '200':
          description: '`Success`'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceV3'
        '401':
          description: '`Unauthorized` The token or service name is incorrect'
        '404':
          description: '`Failed` Invoice not found'
        '410':
          description: '`ERP Unable to Finish`'
        '412':
          description: '`ERP Validation Error`'
        '417':
          description: '`ERP Unavailable`'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - v3 invoices
      summary: Cancel proforma invoice
      description: Cancel proforma invoice by variable symbol (*paymentReferenceId*)
      operationId: cancel_proforma_invoice_v3_invoices__paymentReferenceId__delete
      parameters:
        - description: Variable symbol
          required: true
          schema:
            title: Paymentreferenceid
            type: string
            description: Variable symbol
          example: '1100000005'
          name: paymentReferenceId
          in: path
        - description: Legal Entity
          required: true
          schema:
            allOf:
              - $ref: '#/components/schemas/LegalEntity'
            description: Legal Entity
          example: HEG
          name: legal_entity
          in: query
        - description: Service token (for integration of new services, send request to **#one-b2b-payment-requests**)
          required: true
          schema:
            title: Token
            type: string
            description: Service token (for integration of new services, send request to **#one-b2b-payment-requests**)
            format: uuid
          name: token
          in: header
      responses:
        '204':
          description: '`Success` Proforma invoice canceled'
        '401':
          description: '`Unauthorized` The token or service name is incorrect'
        '404':
          description: '`Failed` Inovice not found'
        '410':
          description: '`ERP Unable to Finish`'
        '412':
          description: '`ERP Validation Error`'
        '417':
          description: '`ERP Unavailable`'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    head:
      tags:
        - v3 invoices
      summary: Check PDF existence
      description: Check PDF existence by *paymentReferenceId* and *invoice type*
      operationId: check_invoice_v3_invoices__paymentReferenceId__head
      parameters:
        - description: Variable symbol
          required: true
          schema:
            title: Paymentreferenceid
            type: string
            description: Variable symbol
          example: '1100000005'
          name: paymentReferenceId
          in: path
        - description: Type of invoice (invoice or proforma) [Optional - invoice is default]
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/DocumentType'
            description: Type of invoice (invoice or proforma) [Optional - invoice is default]
            default: invoice
          name: invoice_type
          in: query
        - description: Legal Entity
          required: true
          schema:
            allOf:
              - $ref: '#/components/schemas/LegalEntity'
            description: Legal Entity
          example: HEG
          name: legal_entity
          in: query
        - description: Service token (for integration of new services, send request to **#one-b2b-payment-requests**)
          required: true
          schema:
            title: Token
            type: string
            description: Service token (for integration of new services, send request to **#one-b2b-payment-requests**)
            format: uuid
          name: token
          in: header
      responses:
        '200':
          description: '`Success` PDF exists'
        '401':
          description: '`Unauthorized` The token or service name is incorrect'
        '404':
          description: '`Failed` PDF does not exist'
        '410':
          description: '`ERP Unable to Finish`'
        '412':
          description: '`ERP Validation Error`'
        '417':
          description: '`ERP Unavailable`'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v3/invoices:
    get:
      tags:
        - v3 invoices
      summary: Get invoices for customer
      description: Get invoices by their customer ID
      operationId: get_invoices_v3_invoices_get
      parameters:
        - description: Customer ID (UUID)
          required: true
          schema:
            title: Customer Id
            type: string
            description: Customer ID (UUID)
            format: uuid
          example: 273c0dce-37dd-4d77-9e53-af7150088881
          name: customer_id
          in: query
        - description: Type of invoice (invoice or proforma) [Optional - invoice is default]
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/DocumentType'
            description: Type of invoice (invoice or proforma) [Optional - invoice is default]
            default: invoice
          name: invoice_type
          in: query
        - description: Legal Entity
          required: true
          schema:
            allOf:
              - $ref: '#/components/schemas/LegalEntity'
            description: Legal Entity
          example: HEG
          name: legal_entity
          in: query
        - description: Service token (for integration of new services, send request to **#one-b2b-payment-requests**)
          required: true
          schema:
            title: Token
            type: string
            description: Service token (for integration of new services, send request to **#one-b2b-payment-requests**)
            format: uuid
          name: token
          in: header
      responses:
        '200':
          description: '`Success`'
          content:
            application/json:
              schema:
                title: Response Get Invoices V3 Invoices Get
                type: array
                items:
                  $ref: '#/components/schemas/InvoiceV3'
        '401':
          description: '`Unauthorized` The token or service name is incorrect'
        '404':
          description: '`Failed` Invoices not found'
        '410':
          description: '`ERP Unable to Finish`'
        '412':
          description: '`ERP Validation Error`'
        '417':
          description: '`ERP Unavailable`'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - v3 invoices
      summary: Create invoice
      description: Create invoice or proforma invoice
      operationId: create_invoice_v3_invoices_post
      parameters:
        - description: Service token (for integration of new services, send request to **#one-b2b-payment-requests**)
          required: true
          schema:
            title: Token
            type: string
            description: Service token (for integration of new services, send request to **#one-b2b-payment-requests**)
            format: uuid
          name: token
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceInputV3'
        required: true
      responses:
        '201':
          description: '`Success` Invoice created'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceV3'
        '204':
          description: '`No Content` Invoice created but it is not issued'
        '401':
          description: '`Unauthorized` The token or service name is incorrect'
        '404':
          description: '`Failed` Cannot create invoice'
        '409':
          description: '`Conflict` Invoice already exists'
        '410':
          description: '`ERP Unable to Finish`'
        '412':
          description: '`ERP Validation Error`'
        '417':
          description: '`ERP Unavailable`'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v3/partners/{identification_number}:
    get:
      tags:
        - v3 partners
      summary: Get partners
      description: Get partners by identification number from Global Adress Book
      operationId: get_partners_v3_partners__identification_number__get
      parameters:
        - description: Identification number of partner
          required: true
          schema:
            title: Identification Number
            type: string
            description: Identification number of partner
          example: '12345678'
          name: identification_number
          in: path
        - description: Service token (for integration of new services, send request to **#one-b2b-payment-requests**)
          required: true
          schema:
            title: Token
            type: string
            description: Service token (for integration of new services, send request to **#one-b2b-payment-requests**)
            format: uuid
          name: token
          in: header
      responses:
        '200':
          description: '`Success`'
          content:
            application/json:
              schema:
                title: Response Get Partners V3 Partners  Identification Number  Get
                type: array
                items:
                  $ref: '#/components/schemas/PartnerV3'
        '401':
          description: '`Unauthorized` The token or service name is incorrect'
        '404':
          description: '`Failed` Partners not exist'
        '410':
          description: '`ERP Unable to Finish`'
        '412':
          description: '`ERP Validation Error`'
        '417':
          description: '`ERP Unavailable`'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
components:
  schemas:
    CustomerInputV1:
      title: CustomerInputV1
      required:
        - legalEntity
        - name
        - identificationNumber
        - street
        - city
        - postCode
        - email
      type: object
      properties:
        legalEntity:
          allOf:
            - $ref: '#/components/schemas/LegalEntity'
          description: Legal Entity
          example: HEG
        name:
          title: Name
          type: string
          description: Name of the customers company.
          example: Prvni vzduchoplavecka a.s.
        identificationNumber:
          title: Identificationnumber
          type: string
          description: Identification number of the customer
          example: '123456789'
        vatNumber:
          title: Vatnumber
          type: string
          description: VAT number of the customer
          example: '10000001'
        vatIdentificationNumber:
          title: Vatidentificationnumber
          type: string
          description: Slovak IC DIC
          example: '10000001'
        street:
          title: Street
          type: string
          description: Street from the customers address.
          example: U plynojemu 69
        city:
          title: City
          type: string
          description: City from the customers address.
          example: Pardubice
        postCode:
          title: Postcode
          type: string
          description: Post code from the customers address.
          example: '32000'
        countryCode:
          $ref: '#/components/schemas/Iso3166Country3'
        telephone:
          title: Telephone
          type: string
          description: Customers telephone number with country prefix.
          example: '+420605413742'
        email:
          title: Email
          type: string
          description: Customers e-mail address
          format: email
          example: kapitan@vzduchoplavecka.cz
    CustomerInputV2:
      title: CustomerInputV2
      required:
        - legalEntity
        - name
        - identificationNumber
        - street
        - city
        - postCode
        - email
      type: object
      properties:
        legalEntity:
          allOf:
            - $ref: '#/components/schemas/LegalEntity'
          description: Legal Entity
          example: HEG
        name:
          title: Name
          type: string
          description: Name of the customers company.
          example: Prvni vzduchoplavecka a.s.
        identificationNumber:
          title: Identificationnumber
          type: string
          description: Identification number of the customer
          example: '123456789'
        vatNumber:
          title: Vatnumber
          type: string
          description: VAT number of the customer
          example: '10000001'
        vatIdentificationNumber:
          title: Vatidentificationnumber
          type: string
          description: Slovak IC DIC
          example: '10000001'
        generalTaxId:
          title: Generaltaxid
          type: string
          description: Used only for local tax number (especially for OCS)
          default: ''
          example: 12345678-1-12
        street:
          title: Street
          type: string
          description: Street from the customers address.
          example: U plynojemu 69
        city:
          title: City
          type: string
          description: City from the customers address.
          example: Pardubice
        postCode:
          title: Postcode
          type: string
          description: Post code from the customers address.
          example: '32000'
        countryCode:
          $ref: '#/components/schemas/Iso3166Country3'
        telephone:
          title: Telephone
          type: string
          description: Customers telephone number with country prefix.
          example: '+420605413742'
        email:
          title: Email
          type: string
          description: Customers e-mail address
          format: email
          example: kapitan@vzduchoplavecka.cz
        partyId:
          title: Partyid
          type: string
          description: Optional value that is filled only when is there any partner in Global Address Book with the same identificationNumber.
          default: ''
          example: '0011223344'
    CustomerInputV3:
      title: CustomerInputV3
      required:
        - legalEntity
        - name
        - identificationNumber
        - street
        - city
        - postCode
        - countryCode
        - email
      type: object
      properties:
        legalEntity:
          allOf:
            - $ref: '#/components/schemas/LegalEntity'
          description: Legal Entity
          example: HEG
        name:
          title: Name
          type: string
          description: Name of the customers company.
          example: Prvni vzduchoplavecka a.s.
        identificationNumber:
          title: Identificationnumber
          type: string
          description: Identification number of the customer
          example: '123456789'
        vatNumber:
          title: Vatnumber
          type: string
          description: VAT number of the customer
          example: '10000001'
        vatIdentificationNumber:
          title: Vatidentificationnumber
          type: string
          description: Slovak IC DIC
          example: '10000001'
        generalTaxId:
          title: Generaltaxid
          type: string
          description: Used only for local tax number (especially for OCS)
          default: ''
          example: 12345678-1-12
        street:
          title: Street
          type: string
          description: Street from the customers address.
          example: U plynojemu 69
        city:
          title: City
          type: string
          description: City from the customers address.
          example: Pardubice
        postCode:
          title: Postcode
          type: string
          description: Post code from the customers address.
          example: '32000'
        countryCode:
          $ref: '#/components/schemas/Iso3166Country3'
        telephone:
          title: Telephone
          type: string
          description: Customers telephone number with country prefix.
          example: '+420605413742'
        email:
          title: Email
          type: string
          description: Customers e-mail address
          format: email
          example: kapitan@vzduchoplavecka.cz
        partyId:
          title: Partyid
          type: string
          description: Optional value that is filled only when is there any partner in Global Address Book with the same identificationNumber.
          default: ''
          example: '0011223344'
    CustomerV1:
      title: CustomerV1
      required:
        - legalEntity
        - name
        - identificationNumber
        - street
        - city
        - postCode
        - email
        - customerId
        - isActive
      type: object
      properties:
        legalEntity:
          allOf:
            - $ref: '#/components/schemas/LegalEntity'
          description: Legal Entity
          example: HEG
        name:
          title: Name
          type: string
          description: Name of the customers company.
          example: Prvni vzduchoplavecka a.s.
        identificationNumber:
          title: Identificationnumber
          type: string
          description: Identification number of the customer
          example: '123456789'
        vatNumber:
          title: Vatnumber
          type: string
          description: VAT number of the customer
          example: '10000001'
        vatIdentificationNumber:
          title: Vatidentificationnumber
          type: string
          description: Slovak IC DIC
          example: '10000001'
        street:
          title: Street
          type: string
          description: Street from the customers address.
          example: U plynojemu 69
        city:
          title: City
          type: string
          description: City from the customers address.
          example: Pardubice
        postCode:
          title: Postcode
          type: string
          description: Post code from the customers address.
          example: '32000'
        countryCode:
          $ref: '#/components/schemas/Iso3166Country3'
        telephone:
          title: Telephone
          type: string
          description: Customers telephone number with country prefix.
          example: '+420605413742'
        email:
          title: Email
          type: string
          description: Customers e-mail address
          example: kapitan@vzduchoplavecka.cz
        customerId:
          title: Customerid
          type: string
          format: uuid
          example: 7a756aea-3975-418a-83a7-7ab4894c72c3
        isActive:
          title: Isactive
          type: boolean
          example: true
    CustomerV2:
      title: CustomerV2
      required:
        - legalEntity
        - name
        - identificationNumber
        - street
        - city
        - postCode
        - email
        - customerId
        - isActive
      type: object
      properties:
        legalEntity:
          allOf:
            - $ref: '#/components/schemas/LegalEntity'
          description: Legal Entity
          example: HEG
        name:
          title: Name
          type: string
          description: Name of the customers company.
          example: Prvni vzduchoplavecka a.s.
        identificationNumber:
          title: Identificationnumber
          type: string
          description: Identification number of the customer
          example: '123456789'
        vatNumber:
          title: Vatnumber
          type: string
          description: VAT number of the customer
          example: '10000001'
        vatIdentificationNumber:
          title: Vatidentificationnumber
          type: string
          description: Slovak IC DIC
          example: '10000001'
        generalTaxId:
          title: Generaltaxid
          type: string
          description: Used only for local tax number (especially for OCS)
          default: ''
          example: 12345678-1-12
        street:
          title: Street
          type: string
          description: Street from the customers address.
          example: U plynojemu 69
        city:
          title: City
          type: string
          description: City from the customers address.
          example: Pardubice
        postCode:
          title: Postcode
          type: string
          description: Post code from the customers address.
          example: '32000'
        countryCode:
          $ref: '#/components/schemas/Iso3166Country3'
        telephone:
          title: Telephone
          type: string
          description: Customers telephone number with country prefix.
          example: '+420605413742'
        email:
          title: Email
          type: string
          description: Customers e-mail address
          example: kapitan@vzduchoplavecka.cz
        customerId:
          title: Customerid
          type: string
          format: uuid
          example: 7a756aea-3975-418a-83a7-7ab4894c72c3
        isActive:
          title: Isactive
          type: boolean
          example: true
        includeVAT:
          title: Includevat
          type: boolean
          description: Indicates whether the customer is a VAT payer or not.
          default: false
        taxRate:
          title: Taxrate
          type: integer
          description: This value returns the tax rate value, according to the includeVat attribute and the specific Legal Entity.
          default: 0
    CustomerV3:
      title: CustomerV3
      required:
        - legalEntity
        - name
        - identificationNumber
        - street
        - city
        - postCode
        - countryCode
        - email
        - customerId
        - isActive
      type: object
      properties:
        legalEntity:
          allOf:
            - $ref: '#/components/schemas/LegalEntity'
          description: Legal Entity
          example: HEG
        name:
          title: Name
          type: string
          description: Name of the customers company.
          example: Prvni vzduchoplavecka a.s.
        identificationNumber:
          title: Identificationnumber
          type: string
          description: Identification number of the customer
          example: '123456789'
        vatNumber:
          title: Vatnumber
          type: string
          description: VAT number of the customer
          example: '10000001'
        vatIdentificationNumber:
          title: Vatidentificationnumber
          type: string
          description: Slovak IC DIC
          example: '10000001'
        generalTaxId:
          title: Generaltaxid
          type: string
          description: Used only for local tax number (especially for OCS)
          default: ''
          example: 12345678-1-12
        street:
          title: Street
          type: string
          description: Street from the customers address.
          example: U plynojemu 69
        city:
          title: City
          type: string
          description: City from the customers address.
          example: Pardubice
        postCode:
          title: Postcode
          type: string
          description: Post code from the customers address.
          example: '32000'
        countryCode:
          $ref: '#/components/schemas/Iso3166Country3'
        telephone:
          title: Telephone
          type: string
          description: Customers telephone number with country prefix.
          example: '+420605413742'
        email:
          title: Email
          type: string
          description: Customers e-mail address
          example: kapitan@vzduchoplavecka.cz
        customerId:
          title: Customerid
          type: string
          format: uuid
          example: 7a756aea-3975-418a-83a7-7ab4894c72c3
        isActive:
          title: Isactive
          type: boolean
          example: true
        includeVAT:
          title: Includevat
          type: boolean
          description: Indicates whether the customer is a VAT payer or not.
          default: false
        taxRate:
          title: Taxrate
          type: integer
          description: This value returns the tax rate value, according to the includeVat attribute and the specific Legal Entity.
          default: 0
    DocumentType:
      title: DocumentType
      enum:
        - invoice
        - proforma
      type: string
      description: An enumeration.
    HTTPValidationError:
      title: HTTPValidationError
      type: object
      properties:
        detail:
          title: Detail
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
    InvoiceInputItemV2:
      title: InvoiceInputItemV2
      required:
        - text
        - amount
        - unit
      type: object
      properties:
        text:
          title: Text
          type: string
          description: Transaction description
          example: Provize za sprostředkování objednávky na Heureka košík
        amount:
          title: Amount
          type: number
          description: Price without VAT
          example: '10.50'
        unit:
          title: Unit
          type: integer
          description: Number of the amounts for the same item (It can be higher or less than zero)
        aProfitCenter:
          allOf:
            - $ref: '#/components/schemas/Iso3166Country3'
          description: Code of country - ISO 3166-1 alpha-3 - uppercase.If the element is empty, then it will be found in 'Integration settings' according to rest API = 'type/countryCode'
          default: ''
        lineNote:
          title: Linenote
          type: string
          description: Note text field size is not limited, we recommend a maximum of 250 characters
          default: ''
        itemType:
          title: Itemtype
          type: string
          description: PPC/H204/etc...
          default: ''
        itemVatGroup:
          title: Itemvatgroup
          type: string
          default: ''
          example: DEF27
        discount:
          title: Discount
          maximum: 100
          minimum: 0
          type: number
          description: Discount in a range between 0.00 to 100.00%. Example 12.24
          example: '12.20'
        grossAmount:
          title: Grossamount
          type: number
          description: The total amount of the line before discount
          example: '120.10'
    InvoiceInputItemV3:
      title: InvoiceInputItemV3
      required:
        - text
        - amount
        - unit
      type: object
      properties:
        text:
          title: Text
          type: string
          description: Transaction description
          example: Provize za sprostředkování objednávky na Heureka košík
        amount:
          title: Amount
          type: number
          description: Price without VAT
          example: '10.50'
        unit:
          title: Unit
          type: integer
          description: Number of the amounts for the same item (It can be higher or less than zero)
        aProfitCenter:
          allOf:
            - $ref: '#/components/schemas/Iso3166Country3'
          description: Code of country - ISO 3166-1 alpha-3 - uppercase.If the element is empty, then it will be found in 'Integration settings' according to rest API = 'type/countryCode'
          default: ''
        lineNote:
          title: Linenote
          type: string
          description: Note text field size is not limited, we recommend a maximum of 250 characters
          default: ''
        itemType:
          title: Itemtype
          type: string
          description: PPC/H204/etc...
          default: ''
        itemVatGroup:
          title: Itemvatgroup
          type: string
          default: ''
          example: DEF27
        discount:
          title: Discount
          maximum: 100
          minimum: 0
          type: number
          description: Discount in a range between 0.00 to 100.00%. Example 12.24
          example: '12.20'
        grossAmount:
          title: Grossamount
          type: number
          description: The total amount of the line before discount
          example: '120.10'
    InvoiceInputV1:
      title: InvoiceInputV1
      required:
        - legalEntity
        - type
        - customerId
        - items
      type: object
      properties:
        legalEntity:
          allOf:
            - $ref: '#/components/schemas/LegalEntity'
          description: Legal Entity
          example: HEG
        paymentReferenceId:
          title: Paymentreferenceid
          type: integer
          description: Variable symbol
          example: 1100000005
        currency:
          title: Currency code (ISO 4217 standard)
          allOf:
            - $ref: '#/components/schemas/Iso4217Currency3'
          description: Optional - if not set, server defaults will be used
          example: CZK
        countryCode:
          title: Country code (ISO 3166-1 alpha-3 standard)
          allOf:
            - $ref: '#/components/schemas/Iso3166Country3'
          description: Optional - if not set, server defaults will be used
          example: CZE
        type:
          title: Payment source
          allOf:
            - $ref: '#/components/schemas/PaymentType'
          example: autopay
        customerId:
          title: Customer UUID
          type: string
          format: uuid
          example: 79d0db17-ce68-4bb0-88be-aec761e28395
        items:
          title: Items
          type: array
          items:
            $ref: '#/components/schemas/InvoiceItemV1'
        createdDate:
          title: Date (datum vytvoreni) ISO 8601
          type: string
          description: Optional, when not set, current date will be used
          example: '2021-06-28T19:44:37Z'
        dueDate:
          title: Date (datum vytvoreni) ISO 8601
          type: string
          description: Optional, when not set, accounting system will count it
          example: '2021-06-30T19:44:37Z'
    InvoiceInputV2:
      title: InvoiceInputV2
      required:
        - legalEntity
        - paymentType
        - customerId
        - invoiceNote
        - items
      type: object
      properties:
        legalEntity:
          allOf:
            - $ref: '#/components/schemas/LegalEntity'
          description: Legal Entity
          example: HEG
        paymentReferenceId:
          title: Paymentreferenceid
          anyOf:
            - type: integer
            - type: string
          description: Variable symbol (max length 20) - if the paymentReferenceId is missing or the value is null means autoincrement specified in FO
          example: 1100000005
        currency:
          title: Currency code (ISO 4217 standard)
          allOf:
            - $ref: '#/components/schemas/Iso4217Currency3'
          description: Optional - if not set, server defaults will be used
          example: CZK
        countryCode:
          title: Country code (ISO 3166-1 alpha-3 standard)
          allOf:
            - $ref: '#/components/schemas/Iso3166Country3'
          description: Optional - if not set, server defaults will be used
          example: CZE
        paymentType:
          title: Payment source
          allOf:
            - $ref: '#/components/schemas/PaymentType'
          example: autopay
        customerId:
          title: Customer UUID
          type: string
          format: uuid
          example: 79d0db17-ce68-4bb0-88be-aec761e28395
        accountingDate:
          title: Date (datum vytvoreni) ISO 8601; *old* createdDate -> *new* accountingDate
          type: string
          description: Optional, when not set, current date will be used
          example: '2021-06-28T19:44:37Z'
        vatDate:
          title: Date (datum vytvoreni) ISO 8601
          type: string
          description: Optional, when not set, current date will be used
          example: '2021-06-28T19:44:37Z'
        documentDate:
          title: Date (datum vytvoreni) ISO 8601
          type: string
          description: Optional, when not set, current date will be used
          example: '2021-06-28T19:44:37Z'
        dueDate:
          title: Date (datum vytvoreni) ISO 8601
          type: string
          description: Optional, when not set, accounting system will count it
          example: '2021-06-30T19:44:37Z'
        originalInvoiceNr:
          title: Originalinvoicenr
          maxLength: 20
          type: string
          default: ''
          example: '202020'
        invoiceNote:
          title: Invoicenote
          type: string
          description: Note for an invoice header
          example: Title
        customerOrderNr:
          title: Customerordernr
          maxLength: 20
          type: string
          description: Customer request form
          default: ''
        invoiceType:
          allOf:
            - $ref: '#/components/schemas/InvoiceType'
          default: ''
        items:
          title: Items
          type: array
          items:
            $ref: '#/components/schemas/InvoiceInputItemV2'
    InvoiceInputV3:
      title: InvoiceInputV3
      required:
        - legalEntity
        - currency
        - countryCode
        - paymentType
        - customerId
        - invoiceNote
        - items
      type: object
      properties:
        legalEntity:
          allOf:
            - $ref: '#/components/schemas/LegalEntity'
          description: Legal Entity
          example: HEG
        paymentReferenceId:
          title: Paymentreferenceid
          type: string
          description: Variable symbol (max length 20) - if the paymentReferenceId is missing or the value is null means autoincrement specified in FO
          example: 1100000005
        currency:
          title: Currency code (ISO 4217 standard)
          allOf:
            - $ref: '#/components/schemas/Iso4217Currency3'
          description: Optional - if not set, server defaults will be used
          example: CZK
        countryCode:
          title: Country code (ISO 3166-1 alpha-3 standard)
          allOf:
            - $ref: '#/components/schemas/Iso3166Country3'
          description: Optional - if not set, server defaults will be used
          example: CZE
        paymentType:
          title: Payment source
          allOf:
            - $ref: '#/components/schemas/PaymentType'
          example: autopay
        customerId:
          title: Customer UUID
          type: string
          format: uuid
          example: 79d0db17-ce68-4bb0-88be-aec761e28395
        accountingDate:
          title: Date (datum vytvoreni) ISO 8601; *old* createdDate -> *new* accountingDate
          type: string
          description: Optional, when not set, current date will be used
          example: '2021-06-28T19:44:37Z'
        vatDate:
          title: Date (datum vytvoreni) ISO 8601
          type: string
          description: Optional, when not set, current date will be used
          example: '2021-06-28T19:44:37Z'
        documentDate:
          title: Date (datum vytvoreni) ISO 8601
          type: string
          description: Optional, when not set, current date will be used
          example: '2021-06-28T19:44:37Z'
        dueDate:
          title: Date (datum vytvoreni) ISO 8601
          type: string
          description: Optional, when not set, accounting system will count it
          example: '2021-06-30T19:44:37Z'
        originalInvoiceNr:
          title: Originalinvoicenr
          maxLength: 20
          type: string
          example: '202020'
        invoiceType:
          $ref: '#/components/schemas/InvoiceType'
        shopId:
          title: Shopid
          maxLength: 30
          type: string
        invoiceNote:
          title: Invoicenote
          type: string
          description: Note for an invoice header
          example: Title
        customerOrderNr:
          title: Customerordernr
          maxLength: 20
          type: string
          description: Customer request form
          default: ''
        items:
          title: Items
          type: array
          items:
            $ref: '#/components/schemas/InvoiceInputItemV3'
    InvoiceItemV1:
      title: InvoiceItemV1
      required:
        - text
        - amount
      type: object
      properties:
        text:
          title: Text
          type: string
          description: Transaction description
          example: Provize za sprostředkování objednávky na Heureka košík
        amount:
          title: Amount
          type: number
          description: Price without VAT
          example: '10.50'
    InvoiceItemV2:
      title: InvoiceItemV2
      required:
        - text
        - amount
      type: object
      properties:
        text:
          title: Text
          type: string
          description: Transaction description
          example: Provize za sprostředkování objednávky na Heureka košík
        amount:
          title: Amount
          type: number
          description: Price without VAT
          example: '10.50'
    InvoiceItemV3:
      title: InvoiceItemV3
      required:
        - text
        - amount
      type: object
      properties:
        text:
          title: Text
          type: string
          description: Transaction description
          example: Provize za sprostředkování objednávky na Heureka košík
        amount:
          title: Amount
          type: number
          description: Price without VAT
          example: '10.50'
    InvoiceStatus:
      title: InvoiceStatus
      enum:
        - paid
        - partially
        - unpaid
      type: string
      description: An enumeration.
    InvoiceType:
      title: InvoiceType
      enum:
        - empty
        - credit
        - cancel
      type: string
      description: An enumeration.
    InvoiceV1:
      title: InvoiceV1
      required:
        - legalEntity
        - customerId
        - items
        - amount
        - amountVat
        - status
      type: object
      properties:
        legalEntity:
          allOf:
            - $ref: '#/components/schemas/LegalEntity'
          description: Legal Entity
          example: HEG
        paymentReferenceId:
          title: Paymentreferenceid
          type: integer
          description: Variable symbol
          example: 1100000005
        currency:
          title: Currency code (ISO 4217 standard)
          allOf:
            - $ref: '#/components/schemas/Iso4217Currency3'
          description: Optional - if not set, server defaults will be used
          example: CZK
        countryCode:
          title: Country code (ISO 3166-1 alpha-3 standard)
          allOf:
            - $ref: '#/components/schemas/Iso3166Country3'
          description: Optional - if not set, server defaults will be used
          example: CZE
        type:
          title: Payment source
          anyOf:
            - $ref: '#/components/schemas/PaymentType'
            - type: string
          example: autopay
        customerId:
          title: Customer UUID
          type: string
          format: uuid
          example: 79d0db17-ce68-4bb0-88be-aec761e28395
        items:
          title: Items
          type: array
          items:
            $ref: '#/components/schemas/InvoiceItemV1'
        createdDate:
          title: Date (datum vytvoreni) ISO 8601
          type: string
          description: Optional, when not set, current date will be used
          example: '2021-06-28T19:44:37Z'
        dueDate:
          title: Date (datum vytvoreni) ISO 8601
          type: string
          description: Optional, when not set, accounting system will count it
          example: '2021-06-30T19:44:37Z'
        amount:
          title: Amount
          type: string
          description: Price without VAT
          example: '10.50'
        amountVat:
          title: Amountvat
          type: string
          description: Price with VAT
          example: '12.50'
        status:
          allOf:
            - $ref: '#/components/schemas/InvoiceStatus'
          description: Invoice payment status
        pdf:
          title: Pdf
          type: string
          description: PDF data as **base64**
          example: cGRmIGRhdGEgb2YgaW52b2ljZQ==
    InvoiceV2:
      title: InvoiceV2
      required:
        - legalEntity
        - customerId
        - amount
        - amountVat
        - amountToPay
        - status
        - items
      type: object
      properties:
        legalEntity:
          allOf:
            - $ref: '#/components/schemas/LegalEntity'
          description: Legal Entity
          example: HEG
        paymentReferenceId:
          title: Paymentreferenceid
          anyOf:
            - type: integer
            - type: string
          description: Variable symbol (max length 20) - if the paymentReferenceId is missing or the value is null means autoincrement specified in FO
          example: 1100000005
        currency:
          title: Currency code (ISO 4217 standard)
          allOf:
            - $ref: '#/components/schemas/Iso4217Currency3'
          description: Optional - if not set, server defaults will be used
          example: CZK
        countryCode:
          title: Country code (ISO 3166-1 alpha-3 standard)
          allOf:
            - $ref: '#/components/schemas/Iso3166Country3'
          description: Optional - if not set, server defaults will be used
          example: CZE
        paymentType:
          title: Payment source
          anyOf:
            - $ref: '#/components/schemas/PaymentType'
            - type: string
          example: autopay
        customerId:
          title: Customer UUID
          type: string
          format: uuid
          example: 79d0db17-ce68-4bb0-88be-aec761e28395
        accountingDate:
          title: Date (datum vytvoreni) ISO 8601; *old* createdDate -> *new* accountingDate
          type: string
          description: Optional, when not set, current date will be used
          example: '2021-06-28T19:44:37Z'
        vatDate:
          title: Date (datum vytvoreni) ISO 8601
          type: string
          description: Optional, when not set, current date will be used
          example: '2021-06-28T19:44:37Z'
        documentDate:
          title: Date (datum vytvoreni) ISO 8601
          type: string
          description: Optional, when not set, current date will be used
          example: '2021-06-28T19:44:37Z'
        dueDate:
          title: Date (datum vytvoreni) ISO 8601
          type: string
          description: Optional, when not set, accounting system will count it
          example: '2021-06-30T19:44:37Z'
        amount:
          title: Amount
          type: number
          description: Price without VAT
          example: '10.50'
        amountVat:
          title: Amountvat
          type: number
          description: Price with VAT
          example: '12.50'
        amountToPay:
          title: Amounttopay
          type: number
          description: Remaining amount to be paid
          example: '8.00'
        status:
          allOf:
            - $ref: '#/components/schemas/InvoiceStatus'
          description: Invoice payment status
        pdf:
          title: Pdf
          type: string
          description: PDF data as **base64**
          example: cGRmIGRhdGEgb2YgaW52b2ljZQ==
        items:
          title: Items
          type: array
          items:
            $ref: '#/components/schemas/InvoiceItemV2'
    InvoiceV3:
      title: InvoiceV3
      required:
        - legalEntity
        - currency
        - countryCode
        - customerId
        - amount
        - amountVat
        - amountToPay
        - status
        - items
      type: object
      properties:
        legalEntity:
          allOf:
            - $ref: '#/components/schemas/LegalEntity'
          description: Legal Entity
          example: HEG
        paymentReferenceId:
          title: Paymentreferenceid
          type: string
          description: Variable symbol (max length 20) - if the paymentReferenceId is missing or the value is null means autoincrement specified in FO
          example: 1100000005
        currency:
          title: Currency code (ISO 4217 standard)
          allOf:
            - $ref: '#/components/schemas/Iso4217Currency3'
          description: Optional - if not set, server defaults will be used
          example: CZK
        countryCode:
          title: Country code (ISO 3166-1 alpha-3 standard)
          allOf:
            - $ref: '#/components/schemas/Iso3166Country3'
          description: Optional - if not set, server defaults will be used
          example: CZE
        paymentType:
          title: Payment source
          anyOf:
            - $ref: '#/components/schemas/PaymentType'
            - type: string
          example: autopay
        customerId:
          title: Customer UUID
          type: string
          format: uuid
          example: 79d0db17-ce68-4bb0-88be-aec761e28395
        accountingDate:
          title: Date (datum vytvoreni) ISO 8601; *old* createdDate -> *new* accountingDate
          type: string
          description: Optional, when not set, current date will be used
          example: '2021-06-28T19:44:37Z'
        vatDate:
          title: Date (datum vytvoreni) ISO 8601
          type: string
          description: Optional, when not set, current date will be used
          example: '2021-06-28T19:44:37Z'
        documentDate:
          title: Date (datum vytvoreni) ISO 8601
          type: string
          description: Optional, when not set, current date will be used
          example: '2021-06-28T19:44:37Z'
        dueDate:
          title: Date (datum vytvoreni) ISO 8601
          type: string
          description: Optional, when not set, accounting system will count it
          example: '2021-06-30T19:44:37Z'
        originalInvoiceNr:
          title: Originalinvoicenr
          maxLength: 20
          type: string
          example: '202020'
        invoiceType:
          $ref: '#/components/schemas/InvoiceType'
        shopId:
          title: Shopid
          maxLength: 30
          type: string
        amount:
          title: Amount
          type: number
          description: Price without VAT
          example: '10.50'
        amountVat:
          title: Amountvat
          type: number
          description: Price with VAT
          example: '12.50'
        amountToPay:
          title: Amounttopay
          type: number
          description: Remaining amount to be paid
          example: '8.00'
        status:
          allOf:
            - $ref: '#/components/schemas/InvoiceStatus'
          description: Invoice payment status
        pdf:
          title: Pdf
          type: string
          description: PDF data as **base64**
          example: cGRmIGRhdGEgb2YgaW52b2ljZQ==
        items:
          title: Items
          type: array
          items:
            $ref: '#/components/schemas/InvoiceItemV3'
    Iso3166Country3:
      title: Iso3166Country3
      enum:
        - AFG
        - ALA
        - ALB
        - DZA
        - ASM
        - AND
        - AGO
        - AIA
        - ATA
        - ATG
        - ARG
        - ARM
        - ABW
        - AUS
        - AUT
        - AZE
        - BHS
        - BHR
        - BGD
        - BRB
        - BLR
        - BEL
        - BLZ
        - BEN
        - BMU
        - BTN
        - BOL
        - BES
        - BIH
        - BWA
        - BVT
        - BRA
        - IOT
        - BRN
        - BGR
        - BFA
        - BDI
        - CPV
        - KHM
        - CMR
        - CAN
        - CYM
        - CAF
        - TCD
        - CHL
        - CHN
        - CXR
        - CCK
        - COL
        - COM
        - COG
        - COD
        - COK
        - CRI
        - CIV
        - HRV
        - CUB
        - CUW
        - CYP
        - CZE
        - DNK
        - DJI
        - DMA
        - DOM
        - ECU
        - EGY
        - SLV
        - GNQ
        - ERI
        - EST
        - ETH
        - FLK
        - FRO
        - FJI
        - FIN
        - FRA
        - GUF
        - PYF
        - ATF
        - GAB
        - GMB
        - GEO
        - DEU
        - GHA
        - GIB
        - GRC
        - GRL
        - GRD
        - GLP
        - GUM
        - GTM
        - GGY
        - GIN
        - GNB
        - GUY
        - HTI
        - HMD
        - VAT
        - HND
        - HKG
        - HUN
        - ISL
        - IND
        - IDN
        - IRN
        - IRQ
        - IRL
        - IMN
        - ISR
        - ITA
        - JAM
        - JPN
        - JEY
        - JOR
        - KAZ
        - KEN
        - KIR
        - PRK
        - KOR
        - KWT
        - KGZ
        - LAO
        - LVA
        - LBN
        - LSO
        - LBR
        - LBY
        - LIE
        - LTU
        - LUX
        - MAC
        - MKD
        - MDG
        - MWI
        - MYS
        - MDV
        - MLI
        - MLT
        - MHL
        - MTQ
        - MRT
        - MUS
        - MYT
        - MEX
        - FSM
        - MDA
        - MCO
        - MNG
        - MNE
        - MSR
        - MAR
        - MOZ
        - MMR
        - NAM
        - NRU
        - NPL
        - NLD
        - NCL
        - NZL
        - NIC
        - NER
        - NGA
        - NIU
        - NFK
        - MNP
        - NOR
        - OMN
        - PAK
        - PLW
        - PSE
        - PAN
        - PNG
        - PRY
        - PER
        - PHL
        - PCN
        - POL
        - PRT
        - PRI
        - QAT
        - REU
        - ROU
        - RUS
        - RWA
        - BLM
        - SHN
        - KNA
        - LCA
        - MAF
        - SPM
        - VCT
        - WSM
        - SMR
        - STP
        - SAU
        - SEN
        - SRB
        - SYC
        - SLE
        - SGP
        - SXM
        - SVK
        - SVN
        - SLB
        - SOM
        - ZAF
        - SGS
        - SSD
        - ESP
        - LKA
        - SDN
        - SUR
        - SJM
        - SWZ
        - SWE
        - CHE
        - SYR
        - TWN
        - TJK
        - TZA
        - THA
        - TLS
        - TGO
        - TKL
        - TON
        - TTO
        - TUN
        - TUR
        - TKM
        - TCA
        - TUV
        - UGA
        - UKR
        - ARE
        - GBR
        - USA
        - UMI
        - URY
        - UZB
        - VUT
        - VEN
        - VNM
        - VGB
        - VIR
        - WLF
        - ESH
        - YEM
        - ZMB
        - ZWE
      type: string
      description: An enumeration.
    Iso4217Currency3:
      title: Iso4217Currency3
      enum:
        - AFN
        - DZD
        - ARS
        - AMD
        - AWG
        - AUD
        - AZN
        - BSD
        - BHD
        - THB
        - PAB
        - BBD
        - BYN
        - BZD
        - BMD
        - BOB
        - VES
        - BRL
        - BND
        - BGN
        - BIF
        - XOF
        - XAF
        - XPF
        - CVE
        - CAD
        - KYD
        - CLP
        - XTS
        - COP
        - KMF
        - CDF
        - BAM
        - NIO
        - CRC
        - CUP
        - CZK
        - GMD
        - DKK
        - MKD
        - DJF
        - STN
        - DOP
        - VND
        - XCD
        - EGP
        - SVC
        - ETB
        - EUR
        - FKP
        - FJD
        - HUF
        - GHS
        - GIP
        - XAU
        - HTG
        - PYG
        - GNF
        - GYD
        - HKD
        - UAH
        - ISK
        - INR
        - IRR
        - IQD
        - JMD
        - JOD
        - KES
        - PGK
        - HRK
        - KWD
        - AOA
        - MMK
        - LAK
        - GEL
        - LBP
        - ALL
        - HNL
        - SLL
        - LRD
        - LYD
        - SZL
        - LSL
        - MGA
        - MWK
        - MYR
        - MUR
        - MXN
        - MXV
        - MDL
        - MAD
        - MZN
        - BOV
        - NGN
        - ERN
        - NAD
        - NPR
        - ANG
        - ILS
        - TWD
        - NZD
        - BTN
        - KPW
        - NOK
        - MRU
        - PKR
        - XPD
        - MOP
        - TOP
        - CUC
        - UYU
        - PHP
        - XPT
        - GBP
        - BWP
        - QAR
        - GTQ
        - ZAR
        - OMR
        - KHR
        - RON
        - MVR
        - IDR
        - RUB
        - RWF
        - XDR
        - SHP
        - SAR
        - RSD
        - SCR
        - XAG
        - SGD
        - PEN
        - SBD
        - KGS
        - SOS
        - TJS
        - SSP
        - LKR
        - XSU
        - SDG
        - SRD
        - SEK
        - CHF
        - SYP
        - BDT
        - WST
        - TZS
        - KZT
        - XXX
        - TTD
        - MNT
        - TND
        - TRY
        - TMT
        - AED
        - USD
        - USN
        - UGX
        - UYW
        - CLF
        - COU
        - UYI
        - UZS
        - VUV
        - CHE
        - CHW
        - KRW
        - YER
        - JPY
        - CNY
        - ZMW
        - ZWL
      type: string
      description: An enumeration.
    LegalEntity:
      title: LegalEntity
      enum:
        - HEG
        - HEF
        - OCS
        - CEN
        - SMI
        - DTW
        - BBT
      type: string
      description: An enumeration.
    PartnerV2:
      title: PartnerV2
      required:
        - name
        - identificationNumber
        - street
        - city
        - postCode
        - isActive
      type: object
      properties:
        partyId:
          title: Partyid
          type: string
          description: Optional value that is filled only when is there any partner in Global Address Book with the same identificationNumber.
          default: ''
          example: '0011223344'
        name:
          title: Name
          type: string
          description: Name of the customers company.
          example: Prvni vzduchoplavecka a.s.
        identificationNumber:
          title: Identificationnumber
          type: string
          description: Identification number of the customer
          example: '123456789'
        vatNumber:
          title: Vatnumber
          type: string
          description: VAT number of the customer
          example: '10000001'
        vatIdentificationNumber:
          title: Vatidentificationnumber
          type: string
          description: Slovak IC DIC
          example: '10000001'
        street:
          title: Street
          type: string
          description: Street from the customers address.
          example: U plynojemu 69
        city:
          title: City
          type: string
          description: City from the customers address.
          example: Pardubice
        postCode:
          title: Postcode
          type: string
          description: Post code from the customers address.
          example: '32000'
        countryCode:
          $ref: '#/components/schemas/Iso3166Country3'
        isActive:
          title: Isactive
          type: boolean
          example: true
    PartnerV3:
      title: PartnerV3
      required:
        - name
        - identificationNumber
        - street
        - city
        - postCode
        - countryCode
        - isActive
      type: object
      properties:
        partyId:
          title: Partyid
          type: string
          description: Optional value that is filled only when is there any partner in Global Address Book with the same identificationNumber.
          default: ''
          example: '0011223344'
        name:
          title: Name
          type: string
          description: Name of the customers company.
          example: Prvni vzduchoplavecka a.s.
        identificationNumber:
          title: Identificationnumber
          type: string
          description: Identification number of the customer
          example: '123456789'
        vatNumber:
          title: Vatnumber
          type: string
          description: VAT number of the customer
          example: '10000001'
        vatIdentificationNumber:
          title: Vatidentificationnumber
          type: string
          description: Slovak IC DIC
          example: '10000001'
        street:
          title: Street
          type: string
          description: Street from the customers address.
          example: U plynojemu 69
        city:
          title: City
          type: string
          description: City from the customers address.
          example: Pardubice
        postCode:
          title: Postcode
          type: string
          description: Post code from the customers address.
          example: '32000'
        countryCode:
          $ref: '#/components/schemas/Iso3166Country3'
        isActive:
          title: Isactive
          type: boolean
          example: true
    PaymentType:
      title: PaymentType
      enum:
        - autopay
        - manual
        - paybylink
        - banktransfer
        - backwardinvoicing
        - shoppingcart
        - adyen
        - other
      type: string
      description: An enumeration.
    ValidationError:
      title: ValidationError
      required:
        - loc
        - msg
        - type
      type: object
      properties:
        loc:
          title: Location
          type: array
          items:
            type: string
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
tags:
  - name: operations
    description: API operations
  - name: v3 invoices
    description: Invoice operations used for whole **Heureka Group**
  - name: v3 customers
    description: Customer (Billing Info) operations used for whole **Heureka Group**
  - name: v3 partners
    description: Partners stored in the Global Address Book **Heureka Group**
  - name: v2 invoices
    description: Invoice operations used for whole **Heureka Group**
  - name: v2 customers
    description: Customer (Billing Info) operations used for whole **Heureka Group**
  - name: v2 partners
    description: Partners stored in the Global Address Book **Heureka Group**
  - name: v1 invoices
    description: Invoice operations
  - name: v1 customers
    description: Customer (Billing Info) operations
